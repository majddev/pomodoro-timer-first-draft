{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MHelo\\\\Thinkful\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport Break from \"./pomodoro/Break\";\nimport useInterval from \"../utils/useInterval\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n\n  const incrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime + 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n\n  const decrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime - 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n\n  const incrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime + 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const decrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime - 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const [focusTime, setFocusTime] = useState(defaultFocusTime);\n  const [sessionTime, setSessionTime] = useState(focusTime * 60);\n  const [sessionType, setSessionType] = useState(\"Focus\");\n  let width = 0;\n\n  const stopTimer = () => {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n    setIsTimerRunning(prevState => !prevState);\n  };\n\n  useInterval(() => setSessionTime(sessionTime - 1), isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  if (sessionTime === 0 && sessionType === \"Focus\") {\n    setSessionTime(breakTime * 60);\n    setSessionType(\"Break\");\n  }\n\n  if (sessionTime === 0 && sessionType === \"Break\") {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Pomodoro Timer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Pomodoro, {\n    isTimerRunning: isTimerRunning,\n    focusTime: focusTime,\n    minutesToDuration: minutesToDuration,\n    incrementSessionLengthByFiveMinutes: incrementSessionLengthByFiveMinutes,\n    decrementSessionLengthByFiveMinutes: decrementSessionLengthByFiveMinutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    isTimerRunning: isTimerRunning,\n    breakTime: breakTime,\n    minutesToDuration: minutesToDuration,\n    incrementBreakLengthByOneMinute: incrementBreakLengthByOneMinute,\n    decrementBreakLengthByOneMinute: decrementBreakLengthByOneMinute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: () => stopTimer(),\n    disabled: !isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, sessionType === \"Focus\" ? `Focusing for ${minutesToDuration(focusTime)} minutes` : `On Break for ${minutesToDuration(breakTime)} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, secondsToDuration(sessionTime), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": sessionType === \"Focus\" ? width = +100 - sessionTime / (focusTime * 60) * 100 : width = +100 - sessionTime / (breakTime * 60) * 100,\n    style: {\n      width: width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  })))))))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MHelo/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/App.js"],"names":["React","useState","Pomodoro","Break","useInterval","classNames","minutesToDuration","secondsToDuration","App","defaultFocusTime","defaultBreakTime","isTimerRunning","setIsTimerRunning","breakTime","setBreakTime","incrementBreakLengthByOneMinute","newTime","setSessionTime","decrementBreakLengthByOneMinute","incrementSessionLengthByFiveMinutes","focusTime","setFocusTime","decrementSessionLengthByFiveMinutes","sessionTime","sessionType","setSessionType","width","stopTimer","prevState","playPause","oi","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport Break from \"./pomodoro/Break\";\nimport useInterval from \"../utils/useInterval\";\nimport classNames from \"../utils/class-names\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n\n  const incrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime + 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n  const decrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime - 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n\n  const incrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime + 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const decrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime - 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const [focusTime, setFocusTime] = useState(defaultFocusTime);\n  const [sessionTime, setSessionTime] = useState(focusTime * 60);\n  const [sessionType, setSessionType] = useState(\"Focus\");\n  let width = 0;\n\n  const stopTimer = () => {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n    setIsTimerRunning((prevState) => !prevState);\n  };\n\n  useInterval(\n    () => setSessionTime(sessionTime - 1),\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  if (sessionTime === 0 && sessionType === \"Focus\") {\n    setSessionTime(breakTime * 60);\n    setSessionType(\"Break\");\n  }\n\n  if (sessionTime === 0 && sessionType === \"Break\") {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <div className=\"pomodoro\">\n          <div className=\"row\">\n            <Pomodoro\n              isTimerRunning={isTimerRunning}\n              focusTime={focusTime}\n              minutesToDuration={minutesToDuration}\n              incrementSessionLengthByFiveMinutes={\n                incrementSessionLengthByFiveMinutes\n              }\n              decrementSessionLengthByFiveMinutes={\n                decrementSessionLengthByFiveMinutes\n              }\n            />\n            <Break\n              isTimerRunning={isTimerRunning}\n              breakTime={breakTime}\n              minutesToDuration={minutesToDuration}\n              incrementBreakLengthByOneMinute={incrementBreakLengthByOneMinute}\n              decrementBreakLengthByOneMinute={decrementBreakLengthByOneMinute}\n            />\n             <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={() => stopTimer()}\n              disabled={!isTimerRunning}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">\n              {sessionType === \"Focus\"\n                ? `Focusing for ${minutesToDuration(focusTime)} minutes`\n                : `On Break for ${minutesToDuration(breakTime)} minutes`}\n            </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(sessionTime)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={\n                  sessionType === \"Focus\"\n                    ? width =+ 100 - ((sessionTime / (focusTime * 60)) * 100)\n                    : width =+ 100 - ((sessionTime / (breakTime * 60)) * 100)\n                }\n                style={{ width: width }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}