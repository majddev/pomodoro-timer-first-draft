{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MHelo\\\\Thinkful\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport Break from \"./pomodoro/Break\";\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n\n  const incrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime + 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n\n  const decrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime - 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n\n  const [focusTime, setFocusTime] = useState(defaultFocusTime);\n  const [sessionTime, setSessionTime] = useState(focusTime * 60);\n  const [sessionType, setSessionType] = useState(\"Focus\");\n  let width = 0;\n\n  const stopTimer = () => {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n    setIsTimerRunning(prevState => !prevState);\n  };\n\n  useInterval(() => setSessionTime(sessionTime - 1), isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  if (sessionTime === 0 && sessionType === \"Focus\") {\n    setSessionTime(breakTime * 60);\n    setSessionType(\"Break\");\n  }\n\n  if (sessionTime === 0 && sessionType === \"Break\") {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Pomodoro Timer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pomodoro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    isTimerRunning: isTimerRunning,\n    breakTime: breakTime,\n    minutesToDuration: minutesToDuration,\n    incrementBreakLengthByOneMinute: incrementBreakLengthByOneMinute,\n    decrementBreakLengthByOneMinute: decrementBreakLengthByOneMinute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MHelo/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/App.js"],"names":["React","useState","Pomodoro","Break","App","defaultFocusTime","defaultBreakTime","isTimerRunning","setIsTimerRunning","breakTime","setBreakTime","incrementBreakLengthByOneMinute","newTime","setSessionTime","decrementBreakLengthByOneMinute","focusTime","setFocusTime","sessionTime","sessionType","setSessionType","width","stopTimer","prevState","useInterval","playPause","minutesToDuration"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport Break from \"./pomodoro/Break\"\n\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n\n  const incrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime + 1\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  }\n  const decrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime - 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  }\n\n  \n\n  const [focusTime, setFocusTime] = useState(defaultFocusTime);\n  const [sessionTime, setSessionTime] = useState(focusTime * 60);\n  const [sessionType, setSessionType] = useState(\"Focus\");\n  let width = 0;\n\n  const stopTimer = () => {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n    setIsTimerRunning((prevState) => !prevState);\n  };\n\n  useInterval(\n    () => setSessionTime(sessionTime - 1),\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  if (sessionTime === 0 && sessionType === \"Focus\") {\n    setSessionTime(breakTime * 60);\n    setSessionType(\"Break\");\n  }\n\n  if (sessionTime === 0 && sessionType === \"Break\") {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n        <Break  isTimerRunning={isTimerRunning} breakTime={breakTime} minutesToDuration={minutesToDuration}  incrementBreakLengthByOneMinute={incrementBreakLengthByOneMinute}  decrementBreakLengthByOneMinute={decrementBreakLengthByOneMinute}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}