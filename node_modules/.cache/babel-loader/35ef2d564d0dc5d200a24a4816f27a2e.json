{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MHelo\\\\Thinkful\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Break.js\";\nimport React from \"react\";\n\nconst Break = ({\n  breakTime,\n  minutesToDuration,\n  incrementBreakLengthByOneMinute,\n  decrementBreakLengthByOneMinute\n}) => {\n  const breakLengthInMinutes = minutesToDuration(breakTime);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Break Duration: \", minutesToDuration(breakTime)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: () => {\n      let newTime = breakTime - 1;\n      setBreakTime(newTime);\n      if (sessionType === \"Break\") setSessionTime(breakTime * 60);\n    },\n    disabled: isTimerRunning || breakTime === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: () => {\n      let newTime = breakTime + 1;\n      setBreakTime(newTime);\n      if (sessionType === \"Break\") setSessionTime(breakTime * 60);\n    },\n    disabled: isTimerRunning || breakTime === 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }))))));\n};","map":{"version":3,"sources":["C:/Users/MHelo/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Break.js"],"names":["React","Break","breakTime","minutesToDuration","incrementBreakLengthByOneMinute","decrementBreakLengthByOneMinute","breakLengthInMinutes","newTime","setBreakTime","sessionType","setSessionTime","isTimerRunning"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACXC,EAAAA,SADW;AAEXC,EAAAA,iBAFW;AAGXC,EAAAA,+BAHW;AAIXC,EAAAA;AAJW,CAAD,KAKR;AACF,QAAMC,oBAAoB,GAAGH,iBAAiB,CAACD,SAAD,CAA9C;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACmBC,iBAAiB,CAACD,SAAD,CADpC,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIK,OAAO,GAAGL,SAAS,GAAG,CAA1B;AACAM,MAAAA,YAAY,CAACD,OAAD,CAAZ;AACA,UAAIE,WAAW,KAAK,OAApB,EAA6BC,cAAc,CAACR,SAAS,GAAG,EAAb,CAAd;AAC9B,KARH;AASE,IAAA,QAAQ,EAAES,cAAc,IAAIT,SAAS,KAAK,CAT5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,eAcE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIK,OAAO,GAAGL,SAAS,GAAG,CAA1B;AACAM,MAAAA,YAAY,CAACD,OAAD,CAAZ;AACA,UAAIE,WAAW,KAAK,OAApB,EAA6BC,cAAc,CAACR,SAAS,GAAG,EAAb,CAAd;AAC9B,KARH;AASE,IAAA,QAAQ,EAAES,cAAc,IAAIT,SAAS,KAAK,EAT5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAdF,CAJF,CADF,CADA,CADJ;AAwCH,CAjDD","sourcesContent":["import React from \"react\";\r\n\r\nconst Break = ({\r\n    breakTime,\r\n    minutesToDuration,\r\n    incrementBreakLengthByOneMinute,\r\n    decrementBreakLengthByOneMinute,\r\n}) => {\r\n    const breakLengthInMinutes = minutesToDuration(breakTime)\r\n\r\n\r\n    return (\r\n        <div className=\"col\">\r\n        <div className=\"float-right\">\r\n          <div className=\"input-group input-group-lg mb-2\">\r\n            <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n              Break Duration: {minutesToDuration(breakTime)}\r\n            </span>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"decrease-break\"\r\n                onClick={() => {\r\n                  let newTime = breakTime - 1;\r\n                  setBreakTime(newTime);\r\n                  if (sessionType === \"Break\") setSessionTime(breakTime * 60);\r\n                }}\r\n                disabled={isTimerRunning || breakTime === 1}\r\n              >\r\n                <span className=\"oi oi-minus\" />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-testid=\"increase-break\"\r\n                onClick={() => {\r\n                  let newTime = breakTime + 1;\r\n                  setBreakTime(newTime);\r\n                  if (sessionType === \"Break\") setSessionTime(breakTime * 60);\r\n                }}\r\n                disabled={isTimerRunning || breakTime === 15}\r\n              >\r\n                <span className=\"oi oi-plus\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}