{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MHelo\\\\Thinkful\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Active.js\";\nimport React, { useState } from \"react\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nexport default function Active({\n  isTimerRunning,\n  sessionTime,\n  sessionType,\n  focusTime,\n  breakTime\n}) {\n  if (!isTimerRunning) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, \" \", sessionType === \"Focus\" ? `Focusing for ${minutesToDuration(focusTime)} minutes` : `On Break for ${minutesToDuration(breakTime)} minutes`, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, secondsToDuration(sessionTime), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": 100 - sessionTime / 100 // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: sessionTime / 100\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }\n    })))));\n  }\n}","map":{"version":3,"sources":["C:/Users/MHelo/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Active.js"],"names":["React","useState","minutesToDuration","secondsToDuration","Active","isTimerRunning","sessionTime","sessionType","focusTime","breakTime","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;AAGA,eAAe,SAASC,MAAT,CAAgB;AAACC,EAAAA,cAAD;AAAiBC,EAAAA,WAAjB;AAA8BC,EAAAA,WAA9B;AAA2CC,EAAAA,SAA3C;AAAsDC,EAAAA;AAAtD,CAAhB,EAAkF;AAC7F,MAAI,CAACJ,cAAL,EAAqB;AACjB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAkCE,WAAW,KAAK,OAAhB,GAA2B,gBAAeL,iBAAiB,CAACM,SAAD,CAAY,UAAvE,GAAoF,gBAAeN,iBAAiB,CAACO,SAAD,CAAY,UAAlK,MAFF,eAIE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCN,iBAAiB,CAACG,WAAD,CADlB,eAJF,CADF,CAFA,eAYA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAe,MAAIJ,WAAW,GAAC,GALjC,CAKsC;AALtC;AAME,MAAA,KAAK,EAAE;AAAEK,QAAAA,KAAK,EAAEL,WAAW,GAAC;AAArB,OANT,CAMqC;AANrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAZA,CADJ;AA6BH;AAEJ","sourcesContent":["import React, { useState } from \"react\";\r\nimport {minutesToDuration} from '../utils/duration';\r\nimport {secondsToDuration} from '../utils/duration';\r\n\r\n\r\nexport default function Active({isTimerRunning, sessionTime, sessionType, focusTime, breakTime}) {\r\n    if (!isTimerRunning) {\r\n        return (\r\n            <div>\r\n            {/* TODO: This area should show only when a focus or break session is running or pauses */}\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col\">\r\n                {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n                <h2 data-testid=\"session-title\"> {sessionType === \"Focus\" ? `Focusing for ${minutesToDuration(focusTime)} minutes` : `On Break for ${minutesToDuration(breakTime)} minutes`} </h2>\r\n                {/* TODO: Update message below to include time remaining in the current session */}\r\n                <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                {secondsToDuration(sessionTime)} remaining\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col\">\r\n                <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                  <div\r\n                    className=\"progress-bar\"\r\n                    role=\"progressbar\"\r\n                    aria-valuemin=\"0\"\r\n                    aria-valuemax=\"100\"\r\n                    aria-valuenow={100-sessionTime/100} // TODO: Increase aria-valuenow as elapsed time increases\r\n                    style={{ width: sessionTime/100 }} // TODO: Increase width % as elapsed time increases\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n            )\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}