{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MHelo\\\\Thinkful\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport Break from \"./pomodoro/Break\";\nimport TimerControl from \"./pomodoro/TimerControl\";\nimport useInterval from \"./utils/useInterval\";\nimport classNames from \"./utils/class-names\";\nimport { minutesToDuration } from \"./utils/duration\";\nimport { secondsToDuration } from \"./utils/duration\";\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n\n  const incrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime + 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n\n  const decrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime - 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n\n  const incrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime + 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const decrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime - 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const stopTimer = () => {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n    setIsTimerRunning(prevState => !prevState);\n  };\n\n  useInterval(() => setSessionTime(sessionTime - 1), isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  if (sessionTime === 0 && sessionType === \"Focus\") {\n    setSessionTime(breakTime * 60);\n    setSessionType(\"Break\");\n  }\n\n  if (sessionTime === 0 && sessionType === \"Break\") {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Pomodoro Timer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Pomodoro, {\n    isTimerRunning: isTimerRunning,\n    focusTime: focusTime,\n    minutesToDuration: minutesToDuration,\n    incrementSessionLengthByFiveMinutes: incrementSessionLengthByFiveMinutes,\n    decrementSessionLengthByFiveMinutes: decrementSessionLengthByFiveMinutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    isTimerRunning: isTimerRunning,\n    breakTime: breakTime,\n    minutesToDuration: minutesToDuration,\n    incrementBreakLengthByOneMinute: incrementBreakLengthByOneMinute,\n    decrementBreakLengthByOneMinute: decrementBreakLengthByOneMinute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TimerControl, {\n    isTimerRunning: isTimerRunning,\n    playPause: playPause,\n    classNames: classNames,\n    stopTimer: stopTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, sessionType === \"Focus\" ? `Focusing for ${minutesToDuration(focusTime)} minutes` : `On Break for ${minutesToDuration(breakTime)} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, secondsToDuration(sessionTime), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": sessionType === \"Focus\" ? width = +100 - sessionTime / (focusTime * 60) * 100 : width = +100 - sessionTime / (breakTime * 60) * 100,\n    style: {\n      width: width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })))))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MHelo/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/App.js"],"names":["React","useState","Pomodoro","Break","TimerControl","useInterval","classNames","minutesToDuration","secondsToDuration","App","defaultFocusTime","defaultBreakTime","isTimerRunning","setIsTimerRunning","breakTime","setBreakTime","incrementBreakLengthByOneMinute","newTime","setSessionTime","decrementBreakLengthByOneMinute","incrementSessionLengthByFiveMinutes","focusTime","setFocusTime","decrementSessionLengthByFiveMinutes","stopTimer","setSessionType","prevState","sessionTime","playPause","sessionType","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport Break from \"./pomodoro/Break\";\nimport TimerControl from \"./pomodoro/TimerControl\"\nimport useInterval from \"./utils/useInterval\";\nimport classNames from \"./utils/class-names\";\nimport { minutesToDuration } from \"./utils/duration\";\nimport { secondsToDuration } from \"./utils/duration\";\n\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n\n  const incrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime + 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n  const decrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime - 1;\n    setBreakTime(newTime);\n    setSessionTime(breakTime * 60);\n  };\n\n  const incrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime + 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const decrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime - 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const stopTimer = () => {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n    setIsTimerRunning((prevState) => !prevState);\n  };\n\n  useInterval(\n    () => setSessionTime(sessionTime - 1),\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  if (sessionTime === 0 && sessionType === \"Focus\") {\n    setSessionTime(breakTime * 60);\n    setSessionType(\"Break\");\n  }\n\n  if (sessionTime === 0 && sessionType === \"Break\") {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <div className=\"pomodoro\">\n          <div className=\"row\">\n            <Pomodoro\n              isTimerRunning={isTimerRunning}\n              focusTime={focusTime}\n              minutesToDuration={minutesToDuration}\n              incrementSessionLengthByFiveMinutes={\n                incrementSessionLengthByFiveMinutes\n              }\n              decrementSessionLengthByFiveMinutes={\n                decrementSessionLengthByFiveMinutes\n              }\n            />\n            <Break\n              isTimerRunning={isTimerRunning}\n              breakTime={breakTime}\n              minutesToDuration={minutesToDuration}\n              incrementBreakLengthByOneMinute={incrementBreakLengthByOneMinute}\n              decrementBreakLengthByOneMinute={decrementBreakLengthByOneMinute}\n            />\n            <TimerControl isTimerRunning={isTimerRunning} playPause={playPause} classNames={classNames} stopTimer={stopTimer}/>\n            </div>\n              {/* TODO: This area should show only when a focus or break session is running or pauses */}\n              <div className=\"row mb-2\">\n                <div className=\"col\">\n                  <h2 data-testid=\"session-title\">\n                    {sessionType === \"Focus\"\n                      ? `Focusing for ${minutesToDuration(focusTime)} minutes`\n                      : `On Break for ${minutesToDuration(breakTime)} minutes`}\n                  </h2>\n                  <p className=\"lead\" data-testid=\"session-sub-title\">\n                    {secondsToDuration(sessionTime)} remaining\n                  </p>\n                </div>\n              </div>\n              <div className=\"row mb-2\">\n                <div className=\"col\">\n                  <div className=\"progress\" style={{ height: \"20px\" }}>\n                    <div\n                      className=\"progress-bar\"\n                      role=\"progressbar\"\n                      aria-valuemin=\"0\"\n                      aria-valuemax=\"100\"\n                      aria-valuenow={\n                        sessionType === \"Focus\"\n                          ? (width =\n                              +100 - (sessionTime / (focusTime * 60)) * 100)\n                          : (width =\n                              +100 - (sessionTime / (breakTime * 60)) * 100)\n                      }\n                      style={{ width: width }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}