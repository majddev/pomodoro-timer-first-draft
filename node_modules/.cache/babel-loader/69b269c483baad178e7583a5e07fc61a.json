{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MHelo\\\\Thinkful\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport Break from \"./pomodoro/Break\";\nimport TimerControl from \"./pomodoro/TimerControl\";\nimport ActiveSession from \"./pomodoro/ActiveSession\";\nimport useInterval from \"./utils/useInterval\";\nimport classNames from \"./utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"./utils/duration\";\nimport \"./App.css\";\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n  const [focusTime, setFocusTime] = useState(defaultFocusTime);\n  const [sessionTime, setSessionTime] = useState(focusTime * 60);\n  const [sessionType, setSessionType] = useState(\"Focus\");\n\n  const incrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime + 1;\n    setBreakTime(newTime);\n    if (sessionType === \"Break\") setSessionTime(breakTime * 60);\n  };\n\n  const decrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime - 1;\n    setBreakTime(newTime);\n    if (sessionType === \"Break\") setSessionTime(breakTime * 60);\n  };\n\n  const incrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime + 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const decrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime - 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const stopTimer = () => {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n    setIsTimerRunning(prevState => !prevState);\n  };\n\n  useInterval(() => setSessionTime(sessionTime - 1), isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  ;\n\n  if (sessionTime === 0 && sessionType === \"Focus\") {\n    const FocusDoneAudio = new Audio(`../public/alarm/submarine-dive-horn.mp3`).play();\n    setSessionTime(breakTime * 60);\n    setSessionType(\"Break\");\n  }\n\n  ;\n\n  if (sessionTime === 0 && sessionType === \"Break\") {\n    new Audio(`../public/alarm/alarm-clock-buzzer-beeps.mp3`).play();\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Pomodoro Timer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Pomodoro, {\n    isTimerRunning: isTimerRunning,\n    focusTime: focusTime,\n    minutesToDuration: minutesToDuration,\n    incrementSessionLengthByFiveMinutes: incrementSessionLengthByFiveMinutes,\n    decrementSessionLengthByFiveMinutes: decrementSessionLengthByFiveMinutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TimerControl, {\n    isTimerRunning: isTimerRunning,\n    playPause: playPause,\n    classNames: classNames,\n    stopTimer: stopTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    isTimerRunning: isTimerRunning,\n    breakTime: breakTime,\n    minutesToDuration: minutesToDuration,\n    incrementBreakLengthByOneMinute: incrementBreakLengthByOneMinute,\n    decrementBreakLengthByOneMinute: decrementBreakLengthByOneMinute,\n    sessionType: sessionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ActiveSession, {\n    isTimerRunning: isTimerRunning,\n    focusTime: focusTime,\n    breakTime: breakTime,\n    sessionTime: sessionTime,\n    sessionType: sessionType,\n    minutesToDuration: minutesToDuration,\n    secondsToDuration: secondsToDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MHelo/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/App.js"],"names":["React","useState","Pomodoro","Break","TimerControl","ActiveSession","useInterval","classNames","minutesToDuration","secondsToDuration","App","defaultFocusTime","defaultBreakTime","isTimerRunning","setIsTimerRunning","breakTime","setBreakTime","focusTime","setFocusTime","sessionTime","setSessionTime","sessionType","setSessionType","incrementBreakLengthByOneMinute","newTime","decrementBreakLengthByOneMinute","incrementSessionLengthByFiveMinutes","decrementSessionLengthByFiveMinutes","stopTimer","prevState","playPause","FocusDoneAudio","Audio","play"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport Break from \"./pomodoro/Break\";\nimport TimerControl from \"./pomodoro/TimerControl\";\nimport ActiveSession from \"./pomodoro/ActiveSession\";\nimport useInterval from \"./utils/useInterval\";\nimport classNames from \"./utils/class-names\";\nimport { minutesToDuration, secondsToDuration } from \"./utils/duration\";\nimport \"./App.css\";\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n  const [focusTime, setFocusTime] = useState(defaultFocusTime);\n  const [sessionTime, setSessionTime] = useState(focusTime * 60);\n  const [sessionType, setSessionType] = useState(\"Focus\");\n\n\n  const incrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime + 1;\n    setBreakTime(newTime);\n    if (sessionType === \"Break\") setSessionTime(breakTime * 60);\n  };\n\n  const decrementBreakLengthByOneMinute = () => {\n    let newTime = breakTime - 1;\n    setBreakTime(newTime);\n    if (sessionType === \"Break\") setSessionTime(breakTime * 60);\n  };\n\n  const incrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime + 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const decrementSessionLengthByFiveMinutes = () => {\n    let newTime = focusTime - 5;\n    setFocusTime(newTime);\n    setSessionTime(newTime * 60);\n  };\n\n  const stopTimer = () => {\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n    setIsTimerRunning((prevState) => !prevState);\n  };\n\n  useInterval(\n    () => setSessionTime(sessionTime - 1),\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  };\n\n  if (sessionTime === 0 && sessionType === \"Focus\") {\n    const FocusDoneAudio = new Audio(`../public/alarm/submarine-dive-horn.mp3`).play();\n    setSessionTime(breakTime * 60);\n    setSessionType(\"Break\");\n  };\n\n  if (sessionTime === 0 && sessionType === \"Break\") {\n    new Audio(`../public/alarm/alarm-clock-buzzer-beeps.mp3`).play();\n    setSessionType(\"Focus\");\n    setSessionTime(focusTime * 60);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <div className=\"pomodoro\">\n          <div className=\"row\">\n            <Pomodoro\n              isTimerRunning={isTimerRunning}\n              focusTime={focusTime}\n              minutesToDuration={minutesToDuration}\n              incrementSessionLengthByFiveMinutes={\n                incrementSessionLengthByFiveMinutes\n              }\n              decrementSessionLengthByFiveMinutes={\n                decrementSessionLengthByFiveMinutes\n              }\n            />\n            <TimerControl\n              isTimerRunning={isTimerRunning}\n              playPause={playPause}\n              classNames={classNames}\n              stopTimer={stopTimer}\n            />\n            <Break\n              isTimerRunning={isTimerRunning}\n              breakTime={breakTime}\n              minutesToDuration={minutesToDuration}\n              incrementBreakLengthByOneMinute={incrementBreakLengthByOneMinute}\n              decrementBreakLengthByOneMinute={decrementBreakLengthByOneMinute}\n              sessionType={sessionType}\n            />\n          </div>\n          <ActiveSession\n            isTimerRunning={isTimerRunning}\n            focusTime={focusTime}\n            breakTime={breakTime}\n            sessionTime={sessionTime}\n            sessionType={sessionType}\n            minutesToDuration={minutesToDuration}\n            secondsToDuration={secondsToDuration}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}