{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MHelo\\\\Thinkful\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ActiveSession.js\";\nimport React from \"react\";\n\nconst ActiveSession = ({\n  isTimerRunning,\n  focusTime,\n  breakTime,\n  sessionTime,\n  sessionType,\n  minutesToDuration,\n  secondsToDuration,\n  width\n}) => {\n  if (!isTimerRunning) {\n    return null;\n  } else if (isTimerRunning) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, sessionType === \"Focus\" ? `Focusing for ${minutesToDuration(focusTime)} minutes` : `On Break for ${minutesToDuration(breakTime)} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, secondsToDuration(sessionTime), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": sessionType === \"Focus\" ? width = 100 - sessionTime / (focusTime * 60) * 100 : width = 100 - sessionTime / (breakTime * 60) * 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    })))));\n  }\n};\n\nexport default ActiveSession;","map":{"version":3,"sources":["C:/Users/MHelo/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ActiveSession.js"],"names":["React","ActiveSession","isTimerRunning","focusTime","breakTime","sessionTime","sessionType","minutesToDuration","secondsToDuration","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,cADqB;AAErBC,EAAAA,SAFqB;AAGrBC,EAAAA,SAHqB;AAIrBC,EAAAA,WAJqB;AAKrBC,EAAAA,WALqB;AAMrBC,EAAAA,iBANqB;AAOrBC,EAAAA,iBAPqB;AAQrBC,EAAAA;AARqB,CAAD,KAShB;AACF,MAAG,CAACP,cAAJ,EAAoB;AAChB,WAAO,IAAP;AACH,GAFD,MAEO,IAAIA,cAAJ,EAAmB;AAC5B,wBACU,uDACJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,WAAW,KAAK,OAAhB,GACI,gBAAeC,iBAAiB,CAACJ,SAAD,CAAY,UADhD,GAEI,gBAAeI,iBAAiB,CAACH,SAAD,CAAY,UAHnD,CADF,eAME;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,iBAAiB,CAACH,WAAD,CADpB,eANF,CADA,CADI,eAaN;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBACEJ,WAAW,KAAK,OAAhB,GACKG,KAAK,GAAG,MAAOJ,WAAW,IAAIF,SAAS,GAAG,EAAhB,CAAZ,GAAmC,GADtD,GAEKM,KAAK,GAAG,MAAOJ,WAAW,IAAID,SAAS,GAAG,EAAhB,CAAZ,GAAmC,GAR1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAbM,CADV;AAgCM;AAAE,CA7CV;;AA+CA,eAAeH,aAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst ActiveSession = ({\r\n  isTimerRunning,\r\n  focusTime,\r\n  breakTime,\r\n  sessionTime,\r\n  sessionType,\r\n  minutesToDuration,\r\n  secondsToDuration,\r\n  width,\r\n}) => {\r\n    if(!isTimerRunning) {\r\n        return null;\r\n    } else if (isTimerRunning){\r\n  return (\r\n            <>\r\n        <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <h2 data-testid=\"session-title\">\r\n            {sessionType === \"Focus\"\r\n              ? `Focusing for ${minutesToDuration(focusTime)} minutes`\r\n              : `On Break for ${minutesToDuration(breakTime)} minutes`}\r\n          </h2>\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {secondsToDuration(sessionTime)} remaining\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <div className=\"progress\" style={{ height: \"20px\" }}>\r\n            <div\r\n              className=\"progress-bar\"\r\n              role=\"progressbar\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              aria-valuenow={\r\n                sessionType === \"Focus\"\r\n                  ? (width = 100 - (sessionTime / (focusTime * 60)) * 100)\r\n                  : (width = 100 - (sessionTime / (breakTime * 60)) * 100)\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </>\r\n      )} }\r\n\r\nexport default ActiveSession;\r\n"]},"metadata":{},"sourceType":"module"}