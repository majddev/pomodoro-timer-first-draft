{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MHelo\\\\Thinkful\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Timer.js\";\nimport React, { useState } from \"react\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nexport default function Timer({\n  isTimerRunning,\n  focusTime,\n  breakTime,\n  sessionTime,\n  sessionType\n}) {\n  if (isTimerRunning) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 19\n      }\n    }, \" \", sessionType === \"Focus\" ? `Focusing for ${minutesToDuration(focusTime)} minutes` : `On Break for ${minutesToDuration(breakTime)} minutes`, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }\n    }, secondsToDuration(sessionTime), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": 100 - sessionTime // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: sessionTime\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    })))));\n  }\n}","map":{"version":3,"sources":["C:/Users/MHelo/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Timer.js"],"names":["React","useState","minutesToDuration","secondsToDuration","Timer","isTimerRunning","focusTime","breakTime","sessionTime","sessionType","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;AAGA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,cAAD;AAAiBC,EAAAA,SAAjB;AAA4BC,EAAAA,SAA5B;AAAuCC,EAAAA,WAAvC;AAAoDC,EAAAA;AAApD,CAAf,EAAiF;AAC5F,MAAIJ,cAAJ,EAAoB;AAChB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGI,WAAW,KAAK,OAAhB,GACI,gBAAeP,iBAAiB,CAACI,SAAD,CAAY,UADhD,GAEI,gBAAeJ,iBAAiB,CAACK,SAAD,CAAY,UAJnD,EAI8D,GAJ9D,CAFF,eASE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,iBAAiB,CAACK,WAAD,CADpB,eATF,CADF,CADF,eAgBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAe,MAAMF,WALvB,CAKoC;AALpC;AAME,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAEH;AAAT,OANT,CAMiC;AANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAhBF,CADJ;AAiCH;AAEJ","sourcesContent":["import React, { useState } from \"react\";\r\nimport {minutesToDuration} from '../utils/duration';\r\nimport {secondsToDuration} from '../utils/duration';\r\n\r\n\r\nexport default function Timer({isTimerRunning, focusTime, breakTime, sessionTime, sessionType}) {\r\n    if (isTimerRunning) {\r\n        return (\r\n            <div>\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                  {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n                  <h2 data-testid=\"session-title\">\r\n                    {\" \"}\r\n                    {sessionType === \"Focus\"\r\n                      ? `Focusing for ${minutesToDuration(focusTime)} minutes`\r\n                      : `On Break for ${minutesToDuration(breakTime)} minutes`}{\" \"}\r\n                  </h2>\r\n                  {/* TODO: Update message below to include time remaining in the current session */}\r\n                  <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                    {secondsToDuration(sessionTime)} remaining\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                  <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                    <div\r\n                      className=\"progress-bar\"\r\n                      role=\"progressbar\"\r\n                      aria-valuemin=\"0\"\r\n                      aria-valuemax=\"100\"\r\n                      aria-valuenow={100 - sessionTime} // TODO: Increase aria-valuenow as elapsed time increases\r\n                      style={{ width: sessionTime }} // TODO: Increase width % as elapsed time increases\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}