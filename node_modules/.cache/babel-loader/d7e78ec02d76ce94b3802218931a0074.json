{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MHelo\\\\Thinkful\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport classNames from \"./utils/class-names\";\nimport useInterval from \"./utils/useInterval\";\nimport { minutesToDuration } from \"./utils/duration\";\nimport { secondsToDuration } from \"./utils/duration\";\nimport Timer from \"./pomodoro/Timer\";\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusTime, setFocusTime] = useState(defaultFocusTime);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n  const [sessionTime, setSessionTime] = useState(focusTime * 60);\n  const [sessionType, setSessionType] = useState(\"Focus\");\n\n  const stopTimer = () => {\n    setIsTimerRunning(false);\n    setFocusTime(defaultFocusTime);\n    setBreakTime(defaultBreakTime);\n    setSessionTime(defaultFocusTime * 60);\n  };\n\n  useInterval(() => setSessionTime(sessionTime - 1), isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Pomodoro Timer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pomodoro, {\n    isTimerRunning: isTimerRunning,\n    focusTime: focusTime,\n    setFocusTime: setFocusTime,\n    setBreakTime: setBreakTime,\n    breakTime: breakTime,\n    sessionType: sessionType,\n    sessionTime: sessionTime,\n    playPause: playPause,\n    stopTimer: stopTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Timer, {\n    isTimerRunning: isTimerRunning,\n    focusTime: focusTime,\n    breakTime: breakTime,\n    sessionType: sessiont,\n    sessionTime: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MHelo/Thinkful/Project_Pomodoro_Timer_Qualified_1/src/App.js"],"names":["React","useState","Pomodoro","classNames","useInterval","minutesToDuration","secondsToDuration","Timer","App","defaultFocusTime","defaultBreakTime","isTimerRunning","setIsTimerRunning","focusTime","setFocusTime","breakTime","setBreakTime","sessionTime","setSessionTime","sessionType","setSessionType","stopTimer","playPause","prevState","sessiont"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,gBAAgB,GAAG,CAAzB;AAEA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACQ,gBAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAACS,gBAAD,CAA1C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAACY,SAAS,GAAG,EAAb,CAA9C;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,OAAD,CAA9C;;AAEA,QAAMoB,SAAS,GAAG,MAAM;AACtBT,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,IAAAA,YAAY,CAACL,gBAAD,CAAZ;AACAO,IAAAA,YAAY,CAACN,gBAAD,CAAZ;AACAQ,IAAAA,cAAc,CAACT,gBAAgB,GAAG,EAApB,CAAd;AACD,GALD;;AAOAL,EAAAA,WAAW,CACT,MAAMc,cAAc,CAACD,WAAW,GAAG,CAAf,CADX,EAETN,cAAc,GAAG,IAAH,GAAU,IAFf,CAAX;;AAKA,WAASW,SAAT,GAAqB;AACnBV,IAAAA,iBAAiB,CAAEW,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,cAAc,EAAEZ,cAA1B;AAA0C,IAAA,SAAS,EAAEE,SAArD;AAAgE,IAAA,YAAY,EAAEC,YAA9E;AAA4F,IAAA,YAAY,EAAEE,YAA1G;AAAwH,IAAA,SAAS,EAAED,SAAnI;AAA8I,IAAA,WAAW,EAAEI,WAA3J;AAAwK,IAAA,WAAW,EAAEF,WAArL;AAAkM,IAAA,SAAS,EAAEK,SAA7M;AAAwN,IAAA,SAAS,EAAED,SAAnO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,cAAc,EAAEV,cAAvB;AAAuC,IAAA,SAAS,EAAEE,SAAlD;AAA6D,IAAA,SAAS,EAAEE,SAAxE;AAAmF,IAAA,WAAW,EAAES,QAAhG;AAA0G,IAAA,WAAW,MAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,CADF;AAWD;;AAED,eAAehB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\nimport classNames from \"./utils/class-names\";\nimport useInterval from \"./utils/useInterval\";\nimport { minutesToDuration } from \"./utils/duration\";\nimport { secondsToDuration } from \"./utils/duration\";\nimport Timer from \"./pomodoro/Timer\";\n\nfunction App() {\n  const defaultFocusTime = 25;\n  const defaultBreakTime = 5;\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusTime, setFocusTime] = useState(defaultFocusTime);\n  const [breakTime, setBreakTime] = useState(defaultBreakTime);\n  const [sessionTime, setSessionTime] = useState(focusTime * 60);\n  const [sessionType, setSessionType] = useState(\"Focus\");\n\n  const stopTimer = () => {\n    setIsTimerRunning(false);\n    setFocusTime(defaultFocusTime);\n    setBreakTime(defaultBreakTime);\n    setSessionTime(defaultFocusTime * 60);\n  };\n\n  useInterval(\n    () => setSessionTime(sessionTime - 1),\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro isTimerRunning={isTimerRunning} focusTime={focusTime} setFocusTime={setFocusTime} setBreakTime={setBreakTime} breakTime={breakTime} sessionType={sessionType} sessionTime={sessionTime} playPause={playPause} stopTimer={stopTimer}/>\n        <Timer isTimerRunning={isTimerRunning} focusTime={focusTime} breakTime={breakTime} sessionType={sessiont} sessionTime/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}